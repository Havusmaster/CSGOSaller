# telegram_bot.py
import asyncio
import logging
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiohttp import web
from config import BOT_TOKEN

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞
WEBHOOK_HOST = "https://csgosaller-1.onrender.com"  # URL Render
WEBHOOK_PATH = "/webhook"
WEBHOOK_URL = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()
logging.basicConfig(level=logging.INFO)


# === –•–µ–Ω–¥–ª–µ—Ä—ã ===

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(KeyboardButton(text="üöÄ Start"))
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã", reply_markup=keyboard)


@dp.message(F.text == "üöÄ Start")
async def start_pressed(message: types.Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–†—É—Å—Å–∫–∏–π üá∑üá∫", callback_data="lang_ru")],
        [InlineKeyboardButton(text="O'zbek üá∫üáø", callback_data="lang_uz")]
    ])
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Tilni tanlang:", reply_markup=keyboard)


@dp.callback_query(F.data.startswith("lang_"))
async def set_language(callback: types.CallbackQuery):
    lang = callback.data.split("_")[1]
    if lang == "ru":
        await callback.message.answer("–Ø–∑—ã–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: –†—É—Å—Å–∫–∏–π üá∑üá∫")
    else:
        await callback.message.answer("Til o‚Äòrnatildi: O‚Äòzbek üá∫üáø")
    await callback.answer()


# === –§—É–Ω–∫—Ü–∏–∏ –∑–∞–ø—É—Å–∫–∞ ===

async def run_bot():
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ webhook."""
    app = web.Application()

    async def handle_webhook(request):
        update = await request.json()
        await dp.feed_webhook_update(bot, update)
        return web.Response()

    app.router.add_post(WEBHOOK_PATH, handle_webhook)

    async def on_startup(app):
        await bot.set_webhook(WEBHOOK_URL)
        logging.info(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")

    async def on_shutdown(app):
        await bot.delete_webhook()
        await bot.session.close()

    app.on_startup.append(on_startup)
    app.on_shutdown.append(on_shutdown)

    logging.info("üöÄ –ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞ —á–µ—Ä–µ–∑ webhook...")
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, host="0.0.0.0", port=10000)
    await site.start()

    # –ù–µ –¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è (—á—Ç–æ–±—ã –±–æ—Ç –æ—Å—Ç–∞–≤–∞–ª—Å—è –∞–∫—Ç–∏–≤–Ω—ã–º)
    while True:
        await asyncio.sleep(3600)


# –ï—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if __name__ == "__main__":
    asyncio.run(run_bot())
